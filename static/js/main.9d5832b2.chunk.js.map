{"version":3,"sources":["WeatherApp/assets/rain.svg","WeatherApp/assets/sunny.svg","WeatherApp/assets/snow.svg","WeatherApp/components/WeatherCarousel.js","WeatherApp/assets/search_location.svg","WeatherApp/components/WeatherCard.js","WeatherApp/components/SearchComponent.js","WeatherApp/WeatherCity.js","WeatherApp/components/Layout.js","WeatherApp/Error.js","WeatherApp/components/NavigationBar.js","WeatherApp/components/ScrollIcon.js","App.js","reportWebVitals.js","index.js"],"names":["Styles","styled","div","WeatherCarousel","props","className","href","rel","Carousel","Item","src","rain","alt","sunny","snowy","WCard","WeatherCard","undefined","data","last_updated","current","city_name","location","name","current_text","condition","text","current_temp","temp_c","current_wind","wind_kph","current_humidity","humidity","icon_src","icon","forecast_arr","dummy_arr","day_arr","a2","map","eachDay","day_no","Date","date","getDay","tempp","day","avgtemp_c","temp","ind","i","length","le","push","generateForecastDays","forecast","forecastday","toDateString","width","height","viewBox","d","index","dayy","SearchContainer","SaerchComponent","useState","cityWeather","setCityWeather","queryExecuted","status","city","ttl","getTime","local","ls","get","defaultCity","cityName","setCityName","searched","setSearched","defaultWeather","useRef","useEffect","set","fetchWeather","axios","then","response","catch","err","console","log","handleChange","e","target","value","id","search_location","InputGroup","size","FormControl","placeholder","aria-label","aria-describedby","onChange","readOnly","Button","onClick","variant","WeatherCity","Layout","Container","children","Error","NavigationBar","Navbar","expand","collapseOnSelect","Brand","Toggle","aria-controls","Collapse","Nav","Link","ScrollIcon","App","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9d5832b2.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/rain.9c77fe63.svg\";","export default __webpack_public_path__ + \"static/media/sunny.3c6bf734.svg\";","export default __webpack_public_path__ + \"static/media/snow.abef85f6.svg\";","import React from 'react'\r\nimport Carousel from 'react-bootstrap/Carousel'\r\nimport rain from '../assets/rain.svg'\r\nimport sunny from '../assets/sunny.svg'\r\nimport snowy from '../assets/snow.svg'\r\nimport styled from 'styled-components'\r\n\r\n\r\nconst Styles = styled.div`\r\n    color: #3F3D56;\r\n    margin: 10% auto;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    width: 100%;\r\n    height: 50vh;\r\n    line-height: 2.2em;\r\n    /* border: 1px solid red; */\r\n\r\n    .content h1{\r\n        font-size: 4rem;\r\n        font-weight: 900;\r\n        letter-spacing: 0.15rem;\r\n    }\r\n\r\n    .content p{\r\n        font-weight: 700;\r\n        letter-spacing: 0.15rem;\r\n    }\r\n\r\n    .content a {\r\n        position: relative;\r\n        text-decoration: none;\r\n        letter-spacing: 0.15rem;\r\n        color: #3F3D56;\r\n        font-weight: 700;\r\n        display: block;\r\n        width: 10rem;\r\n        text-align: center;\r\n        padding: 7px 5px;\r\n        border: 1px solid rgba(0,0,0,0.4);\r\n        transition: color 500ms ease-in-out;\r\n\r\n        &::after {\r\n            content: '';\r\n            position: absolute;\r\n            top: 0;\r\n            left: 0;\r\n            right: 0;\r\n            bottom: 0;\r\n            background-color: #6C63FF;\r\n            transition: transform 500ms ease-in-out;\r\n            transform-origin: left;\r\n            transform: scaleX(0);\r\n            z-index: -1;\r\n        }\r\n\r\n        &:hover::after,\r\n        &:focus::after{\r\n            transform: scaleX(1);\r\n        }\r\n\r\n        &:hover{\r\n            color: #efef;\r\n        }\r\n    }\r\n\r\n    .carousel {\r\n        width: 50%;\r\n        height: 100%;\r\n        /* border: 1px solid red; */\r\n    }\r\n    .carousel-indicators{\r\n        background-color: #6C63FF;\r\n    }\r\n\r\n    /* .carousel-control-next-icon,\r\n    .carousel-control-prev-icon{\r\n        background-color: #6C63FF;\r\n    } */\r\n    .carousel-item {\r\n        width: 100%;\r\n        height: 100%;\r\n        /* border: 1px solid red; */\r\n    }\r\n\r\n    .carousel-item img {\r\n        width: 100%;\r\n        height: 400px;\r\n    }\r\n\r\n    @media only screen and (max-width: 1000px){\r\n        width: 100%;\r\n        height: 60vh;\r\n        margin: 10% auto;\r\n        flex-direction: column-reverse;\r\n        justify-content: space-between;\r\n        /* align-items: space-between; */\r\n        line-height: 1em;\r\n        /* border: 1px solid red; */\r\n\r\n        .content{\r\n            height: 40%;\r\n            text-align: center;\r\n            /* border: 1px solid red; */\r\n        }\r\n\r\n        .content h1{\r\n            font-size: 2rem;\r\n            font-weight: 500;\r\n            letter-spacing: 0;\r\n            \r\n        }\r\n\r\n        .content p{\r\n            font-weight: 300;\r\n            letter-spacing: 0;\r\n        }\r\n        \r\n        .content a {\r\n            margin: 0 auto;\r\n        }\r\n        .carousel {\r\n            width: 50%;\r\n            height: 60%;\r\n            /* border: 1px solid red; */\r\n        }\r\n\r\n        .carousel-control-next-icon,\r\n        .carousel-control-prev-icon{\r\n            /* background-color: #6C63FF; */\r\n            display: none;\r\n        }\r\n\r\n        .carousel-item {\r\n            width: 100%;\r\n            height: 100%;\r\n            /* border: 1px solid red; */\r\n        }\r\n\r\n        .carousel-item img {\r\n            width: 100%;\r\n            height: 170px;\r\n        }\r\n    }\r\n\r\n    @media only screen and (min-height: 700px) and (max-height: 799px){\r\n        .carousel-item img {\r\n            width: 100%;\r\n            height: 250px;\r\n        }\r\n    }\r\n\r\n    @media only screen and (min-height: 800px) and (max-height: 899px){\r\n        .carousel-item img {\r\n            width: 100%;\r\n            height: 270px;\r\n        }\r\n        .carousel-indicators{\r\n            background-color: #6C63FF;\r\n        }\r\n    }\r\n`\r\n\r\nconst WeatherCarousel = (props) => (\r\n    <>\r\n        <Styles>\r\n            \r\n            <div className=\"content\">\r\n                <h1>Weather App</h1>\r\n                <p>To get the weather updates and forecast.</p>\r\n                <p>Search for any city and get the weather for</p>\r\n                <p> current day as well as the forecast for </p>\r\n                <p>3 days.</p>\r\n                <a href=\"#search-container\" rel=\"noreferrer\">Search</a>\r\n            </div>\r\n            <Carousel> \r\n                <Carousel.Item>\r\n                    <img\r\n                    className=\"d-block\"\r\n                    src={rain}\r\n                    alt=\"First slide\"\r\n                    />\r\n                    {/* <Carousel.Caption>\r\n                    <h3>Mumbai</h3>\r\n                    </Carousel.Caption> */}\r\n                </Carousel.Item>\r\n                <Carousel.Item>\r\n                    <img\r\n                    className=\"d-block\"\r\n                    src={sunny}\r\n                    alt=\"Second slide\"\r\n                    />\r\n                    {/* <Carousel.Caption>\r\n                    <h3>London</h3>\r\n                    </Carousel.Caption> */}\r\n                </Carousel.Item>\r\n                <Carousel.Item>\r\n                    <img\r\n                    className=\"d-block\"\r\n                    src={snowy}\r\n                    alt=\"Third slide\"\r\n                    />\r\n\r\n                    {/* <Carousel.Caption>\r\n                    <h3>Paris</h3>\r\n                    </Carousel.Caption> */}\r\n                </Carousel.Item>\r\n            </Carousel>\r\n        </Styles>\r\n    </>\r\n)\r\n\r\nexport default WeatherCarousel\r\n\r\n\r\n\r\n\r\n","export default __webpack_public_path__ + \"static/media/search_location.1f28f250.svg\";","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\n\r\nconst WCard = styled.div`\r\n        margin: 0 auto;\r\n        width: 400px;\r\n        height: 300px;\r\n        /* border: 0.5px solid rgba(0,0,0,0.5); */\r\n        border-radius: 0.2rem;\r\n        display: grid;\r\n        grid-template-rows: 0.2fr 2fr 0.1fr 0.5fr;\r\n        grid-template-areas:\r\n            'date'\r\n            'details'\r\n            '.'\r\n            'days';\r\n        position: relative;\r\n\r\n        /* ----------------- */\r\n        /* &::before {\r\n                content: '';\r\n                display: block;\r\n                position: absolute;\r\n                background-color: #ccc;\r\n                left: 0;\r\n                right: 0;\r\n                bottom: 0;\r\n                top: 50%;\r\n                z-index: -1;\r\n                box-shadow: 0 0 40px lighten(#000, 60%);\r\n                transition: box-shadow .2s ease-in-out;\r\n            }\r\n            &.level-3:hover::before {\r\n                        box-shadow: 0 0 80px lighten(#000, 60%);\r\n                    } */\r\n        /* --------------------- */\r\n        .day-date{\r\n            grid-area: date;\r\n        }\r\n        .day-date p {\r\n            margin: 0;\r\n        }\r\n\r\n        .weather-details{\r\n            border: 0.5px solid rgba(0,0,0,0.5);\r\n            grid-area: details;\r\n            display: flex;\r\n            position: relative;\r\n        }\r\n\r\n        .div-1{\r\n            position: relative;\r\n            width: 100%;\r\n            z-index: -1;\r\n            color: #fff;\r\n            /*   height: 100%; */\r\n            /*   border: solid 1px #000; */\r\n        }\r\n\r\n        .div-1 h1,\r\n        .div-1 p{\r\n            letter-spacing: 0.1rem;\r\n            \r\n            margin-left: 1rem;\r\n        }\r\n\r\n        .div-1 h1{\r\n            margin-top: 1.5rem;\r\n            font-size: 1.5rem;\r\n            font-weight: 900;\r\n        }\r\n        .div-1 p{\r\n            font-size: 1rem;\r\n            font-weight: 400;\r\n        }\r\n\r\n        .div-1 span{\r\n            font-size: 0.7rem;\r\n        }\r\n\r\n        svg{\r\n            z-index: -2;\r\n            position: absolute;\r\n            top: 0;\r\n            left: 0;\r\n            width: 100%;\r\n            height: 100%;\r\n        }\r\n\r\n        path {\r\n            /*   stroke: black; */\r\n            fill: #3F3D56;\r\n        }\r\n\r\n        .div-2 {\r\n            padding: 5px 15px;\r\n            position: absolute;\r\n            right: 0;\r\n            top: 0;\r\n        }\r\n\r\n        .div-2 img {\r\n            background-color: #9a97c1;\r\n        }\r\n\r\n        .next-days{\r\n            border: 0.5px solid rgba(0,0,0,0.5);\r\n            grid-area: days;\r\n            display: grid;\r\n            grid-template-columns: repeat(7, 1fr);\r\n            background-color: #3F3D56;\r\n            color: #fff;\r\n        }\r\n\r\n        .day{\r\n            position: relative;\r\n            border-right: 1px solid rgba(255, 255, 255, 0.5);\r\n        }\r\n\r\n        .day h5{\r\n            text-align: center;\r\n            margin: 0 auto;\r\n            font-size: 0.8rem;\r\n            font-weight: 500;\r\n            letter-spacing: 0.06rem;\r\n            padding: 0.3rem 0;\r\n        /*   text-transform: uppercase; */\r\n        }\r\n\r\n        .day h5::after{\r\n            content: '';\r\n            margin: 0 auto;\r\n            position: absolute;\r\n            left: 0;\r\n            bottom: 50%;\r\n            right: 0;\r\n            height: 1px;\r\n            width: 2rem;\r\n            background-color: #fff;\r\n        }\r\n\r\n        .day p{\r\n            padding: 0.3rem 0;\r\n            text-align: center;\r\n            font-size: 0.8rem;\r\n            font-weight: 500;\r\n            margin: 0 auto;\r\n        }\r\n\r\n        .day span{\r\n            font-size: 0.7rem;\r\n        }\r\n\r\n        @media only screen and (max-width: 1000px){\r\n            margin: 1.2rem auto;\r\n            width: 300px;\r\n            height: 240px;\r\n            display: grid;\r\n            grid-template-rows: 0.1fr 1fr 0.2fr;\r\n            grid-template-areas:\r\n                'date'\r\n                'details'\r\n                'days';\r\n            gap: 0.2rem;\r\n\r\n            .day-date{\r\n                grid-area: date;\r\n                height: 20px;\r\n                font-size: 0.8rem;\r\n                /* border-bottom: 1px solid rgba(0,0,0,0.5); */\r\n            }\r\n\r\n\r\n\r\n\r\n            .next-days{\r\n                border-top: 1px solid rgba(0,0,0,0.4);\r\n                grid-area: days;\r\n                display: grid;\r\n                grid-template-columns: repeat(7, 1fr);\r\n            }\r\n\r\n            .day{\r\n                position: relative;\r\n                color: #fff;\r\n                border-right: 1px solid rgba(255, 255, 255, 0.5);\r\n            }\r\n\r\n            .day h5{\r\n                text-align: center;\r\n                margin: 0 auto;\r\n                font-weight: 500;\r\n                font-size: 0.7rem;\r\n                letter-spacing: 0.06rem;\r\n            /*   text-transform: uppercase; */\r\n            }\r\n\r\n            .day p{\r\n                text-align: center;\r\n                font-size: 0.7rem;\r\n                font-weight: 200;\r\n                margin: 0 auto;\r\n            }\r\n        }\r\n`\r\n\r\nconst WeatherCard = (props) => {\r\n    \r\n    if (props.data === undefined) return <h1>Fetching data</h1>\r\n    // else return <h1>Fetchde data</h1>\r\n    else {\r\n        // console.log('here', props.data)\r\n\r\n        const generateForecastDays = (dummy_arr) => {\r\n            const day_arr = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat']\r\n            let a2 = dummy_arr.map((eachDay)=>{\r\n                const day_no = new Date(eachDay.date).getDay()\r\n                const tempp = eachDay.day.avgtemp_c\r\n                return {day: day_arr[day_no], temp: tempp}\r\n            })\r\n\r\n            let ind = 0;\r\n\r\n            for(let i=0; i<day_arr.length-1;i++){\r\n                if (a2[0].day === day_arr[i]){\r\n                    ind = i;\r\n                    break;\r\n                }\r\n            }\r\n            const le = a2.length\r\n            for(let i=ind+le; i<day_arr.length; i++){\r\n                // console.log(i)\r\n                a2.push({day: day_arr[i], temp: a2[i-le].temp})\r\n            }\r\n            for(let i=0; i<ind; i++){\r\n                a2.push({day: day_arr[i], temp: a2[i].temp})\r\n            }\r\n            return a2;\r\n        }\r\n\r\n        const last_updated = props.data.current.last_updated\r\n        const city_name = props.data.location.name\r\n        const current_text = props.data.current.condition.text\r\n        const current_temp = props.data.current.temp_c\r\n        const current_wind = props.data.current.wind_kph\r\n        const current_humidity = props.data.current.humidity\r\n        const icon_src = props.data.current.condition.icon\r\n        const dummy_arr = props.data.forecast.forecastday\r\n        const forecast_arr = generateForecastDays(dummy_arr)\r\n        // console.log(forecast_arr)\r\n\r\n        return (\r\n            <WCard className=\"level-3\">\r\n                <div className=\"day-date\">\r\n                    <p>{new Date(last_updated).toDateString()}</p>\r\n                </div>\r\n                <div className=\"weather-details\">\r\n                    <div className=\"div-1\">\r\n                    <h1>{city_name}</h1>\r\n                    <p>{current_text}, {current_temp}<span>&#x2103;</span></p>\r\n                    <p>Wind: {current_wind}<span>kph</span></p>\r\n                    <p>Humidity: {current_humidity}</p>\r\n                    <svg width=\"100%\" height=\"100%\" viewBox=\"15 0 100 100\">\r\n                        <path d=\"\r\n                        M -50, 0\r\n                        h 80\r\n                        Q 80, 0\r\n                            80, 30\r\n                            85, 50\r\n                            100, 55\r\n                            120, 65\r\n                            125, 100  \r\n                        h -180\r\n                        v -100\r\n                            \r\n                        \"/>\r\n                    </svg>\r\n                    </div>\r\n                    \r\n                    <div className=\"div-2\">\r\n                    <img src={icon_src} alt={current_text}/>\r\n                    </div>\r\n                </div>\r\n                <div className=\"next-days\">\r\n                    { forecast_arr.map((eachDay, index) => {\r\n                        const dayy = eachDay.day\r\n                        const tempp = eachDay.temp\r\n                        \r\n                        return (\r\n                                <div key={index} className={`day${index} day`}>\r\n                                    <h5>{dayy}</h5>\r\n                                    <p>{tempp} &#x2103;</p>\r\n                                </div>\r\n                            \r\n                        )\r\n                    })}\r\n                </div>\r\n            </WCard>\r\n        )\r\n    }\r\n    \r\n}\r\n\r\nexport default WeatherCard\r\n\r\n","import React, { useState, useRef, useEffect } from 'react'\r\nimport styled from 'styled-components'\r\nimport search_location from '../assets/search_location.svg'\r\nimport InputGroup from 'react-bootstrap/InputGroup'\r\nimport FormControl from 'react-bootstrap/FormControl'\r\nimport Button from 'react-bootstrap/Button'\r\nimport WeatherCard from './WeatherCard'\r\nimport axios from 'axios'\r\nimport ls from 'localstorage-slim'\r\n\r\nconst SearchContainer = styled.div`\r\n    margin: 0 auto;\r\n    height: 100vh;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    flex-direction: row;\r\n\r\n    .img-container {\r\n        /* border: 1px solid red; */\r\n        \r\n        & img {\r\n            width: 500px;\r\n            height: 700px;\r\n        }\r\n    }\r\n\r\n    .search-wrapper {\r\n        /* border: 1px solid green; */\r\n        position: relative;\r\n        top: 0;\r\n        right: -55;\r\n        width: 100%;\r\n        /* height: 700px; */\r\n        \r\n    }\r\n\r\n    @media only screen and (max-width: 1000px){\r\n        margin-top: 15rem;\r\n        height: 100vh;\r\n        display: flex;\r\n        justify-content: space-around;\r\n        align-items: space-between;\r\n        flex-direction: column;\r\n\r\n        .img-container {\r\n            /* border: 1px solid red; */\r\n            /* height: 30%; */\r\n            /* margin: 0 auto; */\r\n\r\n            & img {\r\n                width: 250px;\r\n                height: 200px;\r\n            }\r\n        }\r\n\r\n        .search-wrapper {\r\n            height: 60%;\r\n            /* border: 1px solid green; */\r\n            position: relative;\r\n            top: 0;\r\n            right: 0;\r\n            width: 100%;\r\n            /* height: 700px; */\r\n            \r\n        }\r\n    }\r\n`\r\n\r\nconst SaerchComponent = () => {\r\n    const [ cityWeather, setCityWeather ] = useState()\r\n    const queryExecuted = {\r\n        status: false,\r\n        city: 'Mumbai',\r\n        ttl: new Date().getTime()\r\n    }\r\n    \r\n    const local = ls.get('queryStatus')\r\n    const defaultCity = local !== null ? local.city : queryExecuted.city\r\n    const [cityName, setCityName ]= useState(defaultCity)\r\n    const [searched, setSearched ] = useState(false)\r\n    const defaultWeather = useRef(true)\r\n\r\n    // eslint-disable-next-line\r\n    useEffect(() => {\r\n        if(local === null){\r\n            ls.set('queryStatus', queryExecuted)    \r\n        } else {\r\n            const now = new Date()\r\n            if (now.getTime() - local.ttl === 3600000){\r\n                ls.set('queryStatus', {...queryExecuted, status: false, ttl: 600})\r\n                setSearched(false)\r\n            }\r\n        }\r\n\r\n        if (defaultWeather.current){\r\n            fetchWeather()\r\n        }\r\n\r\n        return () => {\r\n            defaultWeather.current = false\r\n        }\r\n\r\n    })\r\n    \r\n    // console.log('weather', cityWeather)\r\n    \r\n    const fetchWeather = () => {\r\n        if(!defaultWeather.current) {\r\n            ls.set('queryStatus', {...queryExecuted, status: true, city: cityName, ttl: new Date().getTime()})\r\n            setSearched(true)\r\n        }\r\n\r\n        const API_KEY = '5f21e25c90e44e60859135245211809' //weather api key\r\n        axios.get(`https://api.weatherapi.com/v1/forecast.json?key=${API_KEY}&q=${cityName}&days=7&aqi=no&alerts=no`)\r\n        .then(response => setCityWeather(response.data))\r\n        .catch(err => console.log(err))\r\n    }\r\n\r\n    const handleChange = (e) => {\r\n        setCityName(e.target.value)\r\n    }\r\n\r\n    \r\n\r\n    return (\r\n        <SearchContainer id='search-container'>\r\n            \r\n            <div className=\"img-container\">\r\n                <img\r\n                className=\"d-block\"\r\n                src={search_location}\r\n                alt=\"First slide\"\r\n                />\r\n            </div>\r\n            <div className=\"search-wrapper\">\r\n                <InputGroup className=\"mt-2 mb-2\" size=\"sm\">\r\n                    { searched ?\r\n                        <>\r\n                            <FormControl\r\n                                placeholder=\"You can search after 1 hour.\"\r\n                                aria-label=\"City Name\"\r\n                                aria-describedby=\"basic-addon2\"\r\n                                onChange={handleChange}\r\n                                readOnly\r\n                            /> \r\n                        </>:\r\n                        <FormControl\r\n                            placeholder=\"City Name\"\r\n                            aria-label=\"City Name\"\r\n                            aria-describedby=\"basic-addon2\"\r\n                            onChange={handleChange}\r\n                            \r\n                        />\r\n                    }\r\n                    <Button onClick={fetchWeather} variant=\"outline-primary\" id=\"button-addon2\" size=\"sm\">\r\n                    &#128269;\r\n                    </Button>\r\n                </InputGroup>\r\n                <WeatherCard data={cityWeather}/>\r\n            </div>\r\n        </SearchContainer>\r\n    )\r\n}\r\n\r\nexport default SaerchComponent\r\n","import React from 'react'\r\nimport WeatherCarousel from './components/WeatherCarousel'\r\nimport SearchContainer from './components/SearchComponent'\r\n\r\nconst WeatherCity = () => {\r\n    \r\n    return (\r\n        <>\r\n            <WeatherCarousel />      \r\n            <SearchContainer />\r\n            {/* <button onClick={fetchWeather}>Fetch</button> */}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default WeatherCity\r\n","import React from 'react'\r\nimport Container from 'react-bootstrap/Container'\r\n\r\nconst Layout = (props) => {\r\n    return (\r\n        <Container>\r\n            {props.children}\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Layout\r\n\r\n","import React from 'react'\r\n\r\nconst Error = () => {\r\n    return (\r\n        <div>\r\n            No Match12314\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Error\r\n\r\n","import React from 'react'\r\nimport Navbar from 'react-bootstrap/Navbar'\r\nimport Nav from 'react-bootstrap/Nav'\r\nimport styled from 'styled-components'\r\n\r\nconst Styles = styled.div`\r\n    .navbar {\r\n        position: fixed;\r\n        top: 0;\r\n        left: 0;\r\n        margin: 0 auto;\r\n        background-color: #fff;\r\n        width: 100%;\r\n        padding: 15px 5px;\r\n        border-bottom: 1px solid rgba(0,0,0,0.2);\r\n        /* border-radius: 25px; */\r\n    }\r\n\r\n    .navbar-collapse {\r\n        justify-content: flex-end;\r\n        width: 50%;\r\n    }\r\n    .navbar-brand {\r\n        font-weight: 700;\r\n        color: #6C63FF;\r\n    }\r\n    \r\n    .navbar-nav .nav-link,\r\n    .navbar-nav .nav-link:visited{\r\n        position: relative;\r\n        font-weight: 500;\r\n        color: #6C63FF;\r\n    }\r\n\r\n    .nav-link::after{\r\n            content: '';\r\n            position: absolute;\r\n            left: 0;\r\n            right: 0;\r\n            bottom: 0;\r\n            height: 2px;\r\n            background-color: #FF6584;\r\n            transition: transform 300ms ease-in-out;\r\n            transform: scaleX(0);\r\n        }\r\n\r\n    .nav-link:hover::after,\r\n    .nav-link:focus::after{\r\n        transform: scaleX(1);\r\n    }\r\n\r\n    @media only screen and (max-width: 1000px){\r\n        .navbar {\r\n        position: relative;}\r\n    }\r\n`\r\n\r\nconst NavigationBar = () =>  (\r\n    <Styles>\r\n        <Navbar expand=\"sm\"  collapseOnSelect={true} width=\"100%\">\r\n            <Navbar.Brand href=\"/\">City Weather</Navbar.Brand>\r\n            <Navbar.Toggle aria-controls=\"basic-navbar-nav\"></Navbar.Toggle>\r\n            <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                <Nav className=\"ml-auto\">\r\n                    <Nav.Link href=\"https://www.weatherapi.com/\" target=\"_blank\">API</Nav.Link>\r\n                    <Nav.Link href=\"https://github.com/\" target=\"_blank\">Github</Nav.Link>\r\n                </Nav>\r\n            </Navbar.Collapse>\r\n        </Navbar>\r\n    </Styles>\r\n)\r\n\r\n\r\nexport default NavigationBar\r\n\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\n\r\nconst Styles = styled.div`\r\n    position: fixed;\r\n    bottom: 5%;\r\n    left: 50%;\r\n    .icon-scroll,\r\n    .icon-scroll:before {\r\n        position: absolute;\r\n        left: 50%;\r\n    }\r\n    \r\n    .icon-scroll {\r\n        width: 20px;\r\n        height: 30px;\r\n        margin-left: -20px;\r\n        top: 50%;\r\n        margin-top: -35px;\r\n        box-shadow: inset 0 0 0 1px #fff;\r\n        border-radius: 25px;\r\n        background-color: #6C63FF;\r\n    }\r\n    .icon-scroll:before {\r\n        content: '';\r\n        width: 8px;\r\n        height: 8px;\r\n        background: #fff;\r\n        margin-left: -4px;\r\n        top: 8px;\r\n        border-radius: 4px;\r\n        animation-duration: 2s;\r\n        animation-iteration-count: infinite;\r\n        animation-delay: 2s;\r\n        animation-timing-function: ease-in-out;\r\n        animation-name: scroll;\r\n        background-color: #FF6584;\r\n    }\r\n\r\n    @keyframes scroll {\r\n        0%, 100%{\r\n            opacity: 1;\r\n        }\r\n        50%{\r\n            opacity: 1;\r\n            transform: translateY(46px);\r\n        }\r\n    }\r\n`\r\nconst ScrollIcon = () => {\r\n    return (\r\n        <Styles>\r\n            <div className='icon-scroll'></div>\r\n        </Styles>\r\n    )\r\n}\r\n\r\nexport default ScrollIcon\r\n","import './App.css'\nimport { BrowserRouter as Router, Route, Switch} from 'react-router-dom'\nimport WeatherCity from './WeatherApp/WeatherCity';\nimport Layout from './WeatherApp/components/Layout'\nimport Error from './WeatherApp/Error'\nimport NavigationBar from './WeatherApp/components/NavigationBar';\nimport ScrollIcon from './WeatherApp/components/ScrollIcon';\n// import Jumbtron from './WeatherApp/components/Jumbtron';\n\n\n\nfunction App() {\n  return (\n    <>\n      <Layout>\n        <NavigationBar />\n        {/* <Jumbtron /> */}\n        <Router>\n          <Switch>\n            <Route exact path=\"\" component={WeatherCity} />\n            <Route component={Error} />\n          </Switch>\n        </Router>\n        <ScrollIcon />\n      </Layout>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}